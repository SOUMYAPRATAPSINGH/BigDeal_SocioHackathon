"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/Console.js":
/*!***********************************!*\
  !*** ./src/components/Console.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_components_Toolbar_Toolbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Toolbar/Toolbar */ \"./src/components/Toolbar/Toolbar.js\");\n/* harmony import */ var _styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/styles/Console.module.css */ \"./src/styles/Console.module.css\");\n/* harmony import */ var _styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var src_components_Dropdown_Prompt__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Dropdown/Prompt */ \"./src/components/Dropdown/Prompt.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nfunction Console(param) {\n    let { textInput: textInput , setTextInput: setTextInput , detectionSettings: detectionSettings , setDetectionSettings: setDetectionSettings , activityDetection: activityDetection , setActivityDetection: setActivityDetection , currentAIAudio: scurrentAIAudio , setCurrentAIAudio: setCurrentAIAudio , sessionTurn: sessionTurn , setSessionTurn: setSessionTurn , playQueue: playQueue , setPlayQueue: setPlayQueue , userMediaStream: userMediaStream , setUserMediaStream: setUserMediaStream , currentAudio: currentAudio , setCurrentAudio: setCurrentAudio , audioRefs: audioRefs , sessionMessages: sessionMessages , currentSession: currentSession , promptOpen: promptOpen , setPromptOpen: setPromptOpen , rerender: rerender , selectedPrompt: selectedPrompt , setRerender: setRerender , micQuiet: micQuiet , resetPlaceholderPrompt: resetPlaceholderPrompt , preprocessedJobDescription: preprocessedJobDescription , setPreprocessedJobDescription: setPreprocessedJobDescription , interviewSettings: interviewSettings  } = param;\n    _s();\n    // Joanna, Kendra, Kimberly, Salli, Joey, Matthew, Ruth, Stephen\n    const voiceNames = {\n        label: \"Amazon Polly\",\n        options: [\n            {\n                label: \"Joanna\",\n                value: \"Joanna\"\n            },\n            {\n                label: \"Kendra\",\n                value: \"Kendra\"\n            },\n            {\n                label: \"Kimberly\",\n                value: \"Kimberly\"\n            },\n            {\n                label: \"Salli\",\n                value: \"Salli\"\n            },\n            {\n                label: \"Joey\",\n                value: \"Joey\"\n            },\n            {\n                label: \"Matthew\",\n                value: \"Matthew\"\n            },\n            {\n                label: \"Ruth\",\n                value: \"Ruth\"\n            },\n            {\n                label: \"Stephen\",\n                value: \"Stephen\"\n            }\n        ]\n    };\n    const voiceId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(voiceNames.options[0].value);\n    function handleTextSubmit(event) {\n        event.preventDefault();\n        if (currentSession.current != null) {\n            currentSession.current.insertMessage(\"user\", event.target[0].value);\n            currentSession.current.process();\n        }\n        event.target[0].value = \"\";\n        if (currentSession.current == null) {\n            currentSession.current = interview();\n            currentSession.current.insertMessage(\"user\", textInput);\n            currentSession.current.process();\n        }\n        return false;\n    }\n    function handleMicrophoneSubmit(event) {\n        event.preventDefault();\n        if (currentSession.current == null) {\n            currentSession.current = interview();\n            currentSession.current.recorder.record();\n        } else {\n            if (activityDetection == 0) {\n                currentSession.current.recorder.record();\n            }\n        }\n        setRerender(rerender + 1);\n    }\n    function resetPrompt() {\n        const { personalityOptions , questionTypes , feedback  } = interviewSettings.current;\n        let interviewerPersonality = \"\";\n        let interviewerQuestions = \"\";\n        // Construct prompt based on interview settings\n        let interviewerPrompt = \"Your role is to provide empathetic and supportive responses. Encourage the user to share their feelings, concerns, or experiences. Ask open-ended questions to facilitate the conversation and offer guidance when appropriate.\";\n        if (feedback) {\n            interviewerPrompt += \" Provide constructive feedback on the candidate's answers, offer suggestions for improvement.\";\n        } else {\n            interviewerPrompt += \"Stay focused on a realistic counselling session simulation.\";\n        }\n        const enabledPersonalities = personalityOptions.filter((option)=>option.enabled);\n        if (enabledPersonalities.length > 0) {\n            const personalities = enabledPersonalities.map((option)=>option.value.toLowerCase());\n            const personalityStr = personalities.join(\", \");\n            interviewerPersonality = \"Your personality type is \".concat(personalityStr, \".\");\n        } else {\n            interviewerPersonality = \"Warm, friendly, and encouraging. You are a supportive and helpful mental health counsellor.\";\n        }\n        const enabledQuestionTypes = questionTypes.filter((option)=>option.enabled);\n        if (enabledQuestionTypes.length > 0) {\n            const questionTypeLabels = enabledQuestionTypes.map((option)=>option.label.toLowerCase());\n            const questionTypeStr = questionTypeLabels.join(\", \");\n            const disabledQuestionTypes = questionTypes.filter((option)=>!option.enabled).map((option)=>option.label.toLowerCase());\n            let negativeQuestions = \"\";\n            if (disabledQuestionTypes.length > 0) {\n                negativeQuestions = \" Do not ask \".concat(disabledQuestionTypes.join(\", \"), \" questions.\");\n            }\n            interviewerQuestions = \"Ask \".concat(questionTypeStr, \" questions.\").concat(negativeQuestions);\n        } else {\n            interviewerQuestions = \"\";\n        }\n        let jobDescription = preprocessedJobDescription;\n        if (jobDescription.length == 0) {\n            jobDescription = \"Blank, kindly remind the user to follow complete instructions and then ask the user for a problems they are going in life\";\n        }\n        const prompt = [\n            {\n                role: \"system\",\n                content: \"\".concat(interviewerPrompt, \" \").concat(interviewerPersonality, \" \").concat(interviewerQuestions, \" Limit your responses to 3 sentences. Do not respond with lists or ask multiple questions at once. End every response with a question to keep the conversation going. You are interviewing a candidate for the following position: \").concat(jobDescription, \".\")\n            }\n        ];\n        sessionMessages.current = prompt;\n        setRerender(rerender + 1);\n        return prompt;\n    }\n    function interview() {\n        // Set the activity detection to 0, meaning that the microphone is not listening for activity\n        setActivityDetection(0);\n        // Reset the prompt\n        resetPrompt();\n        // Setup features to abandon the session\n        const controller = new AbortController();\n        const signal = controller.signal;\n        let stopped = false;\n        let interval;\n        function insertMessage(role, content) {\n            sessionMessages.current.push({\n                role: role,\n                content: content\n            });\n            setTextInput(\"\");\n        }\n        // Recorder holds and processes state for the record requests\n        const recorderInstance = ()=>{\n            let currentRecording = null;\n            function record() {\n                if (stopped) {\n                    stop();\n                    return;\n                }\n                setActivityDetection(1);\n                if (currentRecording != null) {\n                    clear();\n                }\n                currentRecording = collectAudio();\n            }\n            function clear() {\n                if (currentRecording != null) {\n                    currentRecording.cancel();\n                    currentRecording = null;\n                }\n            }\n            return {\n                record: record,\n                clear: clear\n            };\n        };\n        const recorder = recorderInstance();\n        function stop() {\n            stopped = true;\n            if (interval != null) {\n                clearInterval(interval);\n            }\n            controller.abort();\n        }\n        function process(audio) {\n            setActivityDetection(3);\n            // Create a placeholder for the anticipated AI recording\n            let userRecordingIndex;\n            if (audio != null) {\n                // Create a placeholder for the user's recording\n                userRecordingIndex = sessionMessages.current.push({\n                    role: \"user\",\n                    content: \"\",\n                    loading: true\n                });\n            }\n            // Create a placeholder for the AI's recording\n            let AIRecordingIndex = sessionMessages.current.push({\n                role: \"assistant\",\n                content: \"\",\n                loading: true\n            });\n            // Fetch\n            try {\n                fetch(\"/api/chat\", {\n                    method: \"POSt\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        voiceId: voiceId.current,\n                        audio: audio ? audio : null,\n                        messages: (()=>{\n                            // remove audio from sessionMessages.current\n                            let messages = [];\n                            for(let i = 0; i < sessionMessages.current.length; i++){\n                                if (sessionMessages.current[i].content.length > 0) {\n                                    messages.push({\n                                        role: sessionMessages.current[i].role,\n                                        content: sessionMessages.current[i].content\n                                    });\n                                }\n                            }\n                            return messages;\n                        })()\n                    }),\n                    signal\n                }).then((response)=>{\n                    if (!response.ok) {\n                        throw new Error(\"Network response was not ok\");\n                    }\n                    return response.json();\n                }).then((response)=>{\n                    if (stopped) {\n                        stop();\n                        return;\n                    }\n                    if (audio != null) {\n                        sessionMessages.current[userRecordingIndex - 1].loading = false;\n                        sessionMessages.current[userRecordingIndex - 1].content = response.messages[response.messages.length - 2].content;\n                    }\n                    sessionMessages.current[AIRecordingIndex - 1].loading = false;\n                    sessionMessages.current[AIRecordingIndex - 1].content = response.messages[response.messages.length - 1].content;\n                    sessionMessages.current[AIRecordingIndex - 1].audio = response.audio;\n                    sessionMessages.current[AIRecordingIndex - 1].onEnded = turnUser;\n                    const messageIndex = AIRecordingIndex - 1;\n                    playAudio(messageIndex, turnUser);\n                    setCurrentAIAudio(messageIndex);\n                }).catch((error)=>{\n                    console.log(\"Error: \", error.message);\n                    if (stopped) {\n                        stop();\n                        return;\n                    }\n                    if (audio != null) {\n                        sessionMessages.current[userRecordingIndex - 1].loading = false;\n                        sessionMessages.current[userRecordingIndex - 1].content = \"Error, failed to process transcription\";\n                    }\n                    sessionMessages.current[AIRecordingIndex - 1].loading = false;\n                    sessionMessages.current[AIRecordingIndex - 1].content = \"Error, failed to retrieve response\";\n                    setRerender(rerender + 1);\n                });\n            } catch (error) {\n                if (stopped) {\n                    stop();\n                    return;\n                }\n                console.log(\"Error: \", error.message);\n                if (audio != null) {\n                    sessionMessages.current[userRecordingIndex - 1].loading = false;\n                    sessionMessages.current[userRecordingIndex - 1].content = \"Error, failed to process transcription\";\n                }\n                sessionMessages.current[AIRecordingIndex - 1].loading = false;\n                sessionMessages.current[AIRecordingIndex - 1].content = \"Error, failed to retrieve response\";\n                setRerender(rerender + 1);\n            }\n        }\n        function turnUser() {\n            if (stopped) {\n                stop();\n                return;\n            }\n            if (detectionSettings.current.activityDetection) {\n                recorder.record();\n            } else {\n                setActivityDetection(0);\n            }\n        }\n        function collectAudio() {\n            if (stopped) {\n                stop();\n                return;\n            }\n            //collectAudio controls the mic behavior, it enables and sits and waits for the user to begin talking\n            setActivityDetection(1);\n            let mediaRecorder;\n            let audioChunks = [];\n            let recording = false;\n            let stoppedTalking = false;\n            let stoppedTalkingInterval = 0;\n            const autoEndTimer = 45000;\n            let recordingInterval = 0;\n            let source;\n            let gainNode;\n            let analyzer;\n            let bufferLength;\n            let dataArray;\n            const audioContext = new AudioContext();\n            gainNode = audioContext.createGain();\n            analyzer = audioContext.createAnalyser();\n            // Below is the audio stream from the mic, this represents a possible way of checking if the user enabled the mic + the inform the user of a disabled mic\n            source = audioContext.createMediaStreamSource(userMediaStream);\n            source.connect(gainNode);\n            gainNode.connect(analyzer);\n            bufferLength = analyzer.frequencyBinCount;\n            dataArray = new Uint8Array(bufferLength);\n            mediaRecorder = new MediaRecorder(userMediaStream, {\n                mimeType: \"audio/webm\"\n            });\n            mediaRecorder.addEventListener(\"dataavailable\", (event)=>{\n                audioChunks = [\n                    ...audioChunks,\n                    event.data\n                ];\n            });\n            mediaRecorder.addEventListener(\"stop\", async ()=>{\n                const audioBlob = new Blob(audioChunks, {\n                    type: \"audio/webm\"\n                });\n                audioChunks = [];\n                const reader = new FileReader();\n                reader.readAsDataURL(audioBlob);\n                reader.onloadend = async function() {\n                    const base64audio = reader.result;\n                    clearInterval(interval);\n                    process(base64audio);\n                };\n            });\n            interval = setInterval(()=>{\n                analyzer.getByteFrequencyData(dataArray);\n                const volume = dataArray.reduce((acc, val)=>acc + val) / bufferLength;\n                // The user can talk, so start recording if they are talking - voice activity detection\n                if (volume > detectionSettings.current.activityDetectionThreshold) {\n                    if (!recording) {\n                        recording = true;\n                        mediaRecorder.start();\n                        setActivityDetection(2);\n                        console.log(\"Start recording, substantial audio detected\");\n                    } else {\n                        console.log(\"User is currently talking\");\n                        recordingInterval += 100;\n                        if (recordingInterval > autoEndTimer) {\n                            console.log(\"User has been talking for too long, stopping recording\");\n                            recordingInterval = 0;\n                            recording = false;\n                            mediaRecorder.stop();\n                            setActivityDetection(0);\n                        }\n                    }\n                } else {\n                    console.log(\"No audio detected.\");\n                    if (recording) {\n                        stoppedTalking = true;\n                        stoppedTalkingInterval += 100;\n                        console.log(\"User is not currently talking\");\n                    }\n                    if (stoppedTalking && stoppedTalkingInterval > micQuiet.current) {\n                        recording = false;\n                        stoppedTalking = false;\n                        stoppedTalkingInterval = 0;\n                        mediaRecorder.stop();\n                        setActivityDetection(0);\n                        console.log(\"Stopped recording, user has stopped talking\");\n                    }\n                }\n            }, 100);\n            // return an object with a cancel method\n            return {\n                cancel: ()=>{\n                    clearInterval(interval);\n                    mediaRecorder.stop();\n                }\n            };\n        }\n        function playAudio(messageIndex) {\n            if (stopped) return;\n            setPlayQueue([\n                ...playQueue,\n                messageIndex\n            ]);\n        }\n        return {\n            stop: stop,\n            recorder: recorder,\n            insertMessage: insertMessage,\n            process: process\n        };\n    }\n    const handleInputChange = (event)=>{\n        setTextInput(event.target.value);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (playQueue !== null && audioRefs.current[playQueue]) {\n            if (currentAudio) {\n                currentAudio.pause();\n                setCurrentAudio(null);\n            }\n            setCurrentAudio(audioRefs.current[playQueue]);\n            audioRefs.current[playQueue].play();\n            setPlayQueue([]);\n        }\n    }, [\n        playQueue,\n        audioRefs,\n        currentAudio,\n        setCurrentAudio,\n        setPlayQueue\n    ]);\n    // handleTogglePlay handles audio clicks when the click originates from the audio element\n    const handleTogglePlay = (index)=>{\n        // If there is an audio element currently playing, pause it, and set this one as the current audio element\n        if (currentAudio && currentAudio !== audioRefs.current[index]) {\n            currentAudio.pause();\n            currentAudio.currentTime = 0;\n            setCurrentAudio(null);\n        }\n        audioRefs.current[index].currentTime = 0;\n        setCurrentAudio(audioRefs.current[index]);\n    };\n    const scrollableRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    //scroll to bottom of div\n    if (scrollableRef.current !== null) {\n        scrollableRef.current.scrollTop = scrollableRef.current.scrollHeight;\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Console),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(src_components_Dropdown_Prompt__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        selectedPrompt: selectedPrompt,\n                        promptOpen: promptOpen,\n                        setPromptOpen: setPromptOpen,\n                        rerender: rerender,\n                        setRerender: setRerender,\n                        preprocessedJobDescription: preprocessedJobDescription,\n                        setPreprocessedJobDescription: setPreprocessedJobDescription\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                        lineNumber: 491,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: scrollableRef,\n                        className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().InnerConsole),\n                        children: sessionMessages.current.map((message, index)=>{\n                            if (message.role === \"welcome\") {\n                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Message),\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Text),\n                                        children: [\n                                            \"Introduction: Our AI counsellor is here to help you!\",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                lineNumber: 507,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                        children: [\n                                                            \"1. Choose your session settings (voice, personality). \",\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n                                                                children: \"optional\"\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                                lineNumber: 511,\n                                                                columnNumber: 39\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                        lineNumber: 509,\n                                                        columnNumber: 23\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                        children: [\n                                                            \"2. Paste the problem description in the prompt menu.\",\n                                                            \" \",\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n                                                                children: \"required\"\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                                lineNumber: 515,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                        lineNumber: 513,\n                                                        columnNumber: 23\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                        children: [\n                                                            \"3. Introduce yourself (by text or click the microphone to start speaking). \",\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n                                                                children: \"required\"\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                                lineNumber: 519,\n                                                                columnNumber: 45\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                        lineNumber: 517,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                lineNumber: 508,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                        lineNumber: 505,\n                                        columnNumber: 19\n                                    }, this)\n                                }, index, false, {\n                                    fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                    lineNumber: 504,\n                                    columnNumber: 17\n                                }, this);\n                            }\n                            if (message.role === \"user\") {\n                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Message),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Text),\n                                            children: message.loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n                                                    children: \"Your message is being transcribed.\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                    lineNumber: 533,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                lineNumber: 532,\n                                                columnNumber: 23\n                                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                children: [\n                                                    \"User:\\xa0\",\n                                                    message.content\n                                                ]\n                                            }, void 0, true)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                            lineNumber: 530,\n                                            columnNumber: 19\n                                        }, this),\n                                        message.audio && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                                                className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Audio),\n                                                controls: true,\n                                                ref: (audio)=>{\n                                                    audioRefs.current[index] = audio;\n                                                },\n                                                onEnded: ()=>{\n                                                    // Set an if event to check if there's a function on message.audio.onEnded, and if so, call it\n                                                    if (message.onEnded) {\n                                                        message.onEnded();\n                                                        // clear the onEnded function\n                                                        message.onEnded = null;\n                                                    }\n                                                },\n                                                style: {\n                                                    display: \"block\"\n                                                },\n                                                onPlay: ()=>handleTogglePlay(index),\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                                                    src: message.audio.audioDataURI,\n                                                    type: message.audio.ContentType\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                    lineNumber: 558,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                lineNumber: 541,\n                                                columnNumber: 23\n                                            }, this)\n                                        }, void 0, false)\n                                    ]\n                                }, index, true, {\n                                    fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                    lineNumber: 529,\n                                    columnNumber: 17\n                                }, this);\n                            }\n                            if (message.role === \"assistant\") {\n                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Message),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Text),\n                                            children: message.loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n                                                children: \"Counsellor's response is being generated.\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                lineNumber: 574,\n                                                columnNumber: 23\n                                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                children: [\n                                                    \"Coounsellor:\\xa0\",\n                                                    message.content\n                                                ]\n                                            }, void 0, true)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                            lineNumber: 572,\n                                            columnNumber: 19\n                                        }, this),\n                                        message.audio && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                                                className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Audio),\n                                                controls: true,\n                                                ref: (audio)=>{\n                                                    audioRefs.current[index] = audio;\n                                                },\n                                                onEnded: ()=>{\n                                                    // Set an if event to check if there's a function on message.audio.onEnded, and if so, call it\n                                                    if (message.onEnded) {\n                                                        message.onEnded();\n                                                        // clear the onEnded function\n                                                        message.onEnded = null;\n                                                    }\n                                                },\n                                                style: {\n                                                    display: \"block\"\n                                                },\n                                                onPlay: ()=>handleTogglePlay(index),\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                                                    src: message.audio.audioDataURI,\n                                                    type: message.audio.ContentType\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                    lineNumber: 598,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                lineNumber: 581,\n                                                columnNumber: 23\n                                            }, this)\n                                        }, void 0, false)\n                                    ]\n                                }, index, true, {\n                                    fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                    lineNumber: 571,\n                                    columnNumber: 17\n                                }, this);\n                            }\n                            if (message.role === \"system\") {\n                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Message),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Text),\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n                                                children: [\n                                                    \"Prompt:\\xa0\",\n                                                    message.loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"ellipsis\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                            lineNumber: 617,\n                                                            columnNumber: 27\n                                                        }, this)\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                        lineNumber: 616,\n                                                        columnNumber: 25\n                                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                        children: message.content\n                                                    }, void 0, false)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                lineNumber: 613,\n                                                columnNumber: 21\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                            lineNumber: 612,\n                                            columnNumber: 19\n                                        }, this),\n                                        message.audio && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                                                className: (_styles_Console_module_css__WEBPACK_IMPORTED_MODULE_4___default().Audio),\n                                                controls: true,\n                                                ref: (audio)=>{\n                                                    audioRefs.current[index] = audio;\n                                                },\n                                                onEnded: ()=>{\n                                                    // Set an if event to check if there's a function on message.audio.onEnded, and if so, call it\n                                                    if (message.onEnded) {\n                                                        message.onEnded();\n                                                        // clear the onEnded function\n                                                        message.onEnded = null;\n                                                    }\n                                                },\n                                                style: {\n                                                    display: \"block\"\n                                                },\n                                                onPlay: ()=>handleTogglePlay(index),\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                                                    src: message.audio.audioDataURI,\n                                                    type: message.audio.ContentType\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                    lineNumber: 643,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                                lineNumber: 626,\n                                                columnNumber: 23\n                                            }, this)\n                                        }, void 0, false)\n                                    ]\n                                }, index, true, {\n                                    fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                                    lineNumber: 611,\n                                    columnNumber: 17\n                                }, this);\n                            }\n                        })\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                        lineNumber: 500,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                        onSubmit: handleTextSubmit,\n                        style: {\n                            position: \"absolute\",\n                            borderTop: \"1px solid var(--mauve9)\",\n                            width: \"100%\",\n                            bottom: \"0px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            background: \"var(--mauve12)\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            placeholder: \"Type here...\",\n                            type: \"text\",\n                            id: \"input\",\n                            name: \"input\",\n                            disabled: activityDetection === 2,\n                            onChange: handleInputChange,\n                            style: {\n                                color: \"var(--mauve6)\",\n                                border: \"none\",\n                                outline: \"none\",\n                                flexGrow: \"1\"\n                            }\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                            lineNumber: 668,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                        lineNumber: 656,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                lineNumber: 490,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(src_components_Toolbar_Toolbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                activityDetection: activityDetection,\n                handleMicrophoneSubmit: handleMicrophoneSubmit,\n                currentSession: currentSession,\n                detectionSettings: detectionSettings,\n                setDetectionSettings: setDetectionSettings,\n                voiceNames: voiceNames,\n                voiceId: voiceId,\n                selectedPrompt: selectedPrompt,\n                rerender: rerender,\n                setRerender: setRerender,\n                sessionMessages: sessionMessages,\n                setActivityDetection: setActivityDetection,\n                promptOpen: promptOpen,\n                setPromptOpen: setPromptOpen,\n                micQuiet: micQuiet,\n                resetPlaceholderPrompt: resetPlaceholderPrompt,\n                preprocessedJobDescription: preprocessedJobDescription,\n                setPreprocessedJobDescription: setPreprocessedJobDescription,\n                interviewSettings: interviewSettings\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n                lineNumber: 685,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\dell\\\\Clone projects\\\\mock-interviews-with-ai\\\\src\\\\components\\\\Console.js\",\n        lineNumber: 489,\n        columnNumber: 5\n    }, this);\n}\n_s(Console, \"bgvezNICyd2qouNNwUdUPeqfU+U=\");\n_c = Console;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Console);\nvar _c;\n$RefreshReg$(_c, \"Console\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Console.js\n"));

/***/ })

});