"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat";
exports.ids = ["pages/api/chat"];
exports.modules = {

/***/ "aws-sdk":
/*!**************************!*\
  !*** external "aws-sdk" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("aws-sdk");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("openai");

/***/ }),

/***/ "(api)/./src/pages/api/chat.js":
/*!*******************************!*\
  !*** ./src/pages/api/chat.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nconst AWS = __webpack_require__(/*! aws-sdk */ \"aws-sdk\");\nAWS.config.update({\n    accessKeyId: process.env.AMAZON_AWS_POLLY_ACCESS_KEY,\n    secretAccessKey: process.env.AMAZON_AWS_POLLY_SECRET_KEY\n});\n// Create an Polly client\nconst Polly = new AWS.Polly({\n    signatureVersion: \"v4\",\n    region: \"us-east-1\"\n});\n(__webpack_require__(/*! dotenv */ \"dotenv\").config)({\n    path: \"./.env\"\n});\nconst { Configuration , OpenAIApi  } = __webpack_require__(/*! openai */ \"openai\");\nconst configuration = new Configuration({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconst openai = new OpenAIApi(configuration);\nasync function handler(req, res) {\n    const sessionResponse = {\n        transcription: null,\n        chatResponse: null,\n        audioResponse: null,\n        messages: null\n    };\n    //  console.log(\"Received request with body:\", req.body);\n    sessionResponse.messages = req.body.messages;\n    if (req.body.audio) {\n        const audio = req.body.audio;\n        const base64 = audio.split(\",\")[1];\n        const buf = Buffer.from(base64, \"base64\");\n        buf.name = \"sound.webm\";\n        const response = await openai.createTranscription(buf, `whisper-1`);\n        0;\n        //  console.log(\"Transcription response:\", response.data);\n        sessionResponse.transcription = response.data.text;\n        sessionResponse.messages.push({\n            role: \"user\",\n            content: sessionResponse.transcription\n        });\n    }\n    try {\n        openai.createChatCompletion({\n            model: \"gpt-3.5-turbo\",\n            messages: sessionResponse.messages\n        }).then((data)=>{\n            sessionResponse.messages.push({\n                role: data.data.choices[data.data.choices.length - 1].message.role,\n                content: data.data.choices[data.data.choices.length - 1].message.content\n            });\n            sessionResponse.chatResponse = data.data.choices;\n            let params = {\n                Text: data.data.choices[data.data.choices.length - 1].message.content,\n                OutputFormat: \"mp3\",\n                VoiceId: req.body.voiceId || \"Joanna\",\n                Engine: \"neural\"\n            };\n            //      console.log(params);\n            Polly.synthesizeSpeech(params, (err, data)=>{\n                if (err) {\n                    console.log(\"Error synthesizing speech:\", err);\n                    res.status(500).json({\n                        error: err\n                    });\n                } else if (data) {\n                    const audioBuffer = Buffer.from(data.AudioStream);\n                    const audioDataURI = `data:${data.ContentType};base64,${audioBuffer.toString(\"base64\")}`;\n                    data.audioDataURI = audioDataURI;\n                    sessionResponse.audio = data;\n                    // console.log(\"Session response:\", sessionResponse);\n                    res.status(200).json(sessionResponse);\n                }\n            });\n        }).catch((err)=>{\n            console.log(\"Error creating chat completion:\", err);\n            res.status(500).json({\n                error: err\n            });\n        });\n    } catch (err) {\n        console.log(\"Error creating chat completion:\", err);\n        res.status(500).json({\n            error: err\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/chat.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/chat.js"));
module.exports = __webpack_exports__;

})();